"use client"

import type React from "react"

import { useState, useEffect } from "react"
import { PageLayout } from "@/components/page-layout"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Switch } from "@/components/ui/switch"
import { useToast } from "@/hooks/use-toast"

interface InvoiceSettings {
  companyName: string
  companyLogo: string
  companyAddress: string
  companyPhone: string
  companyEmail: string
  companyWebsite: string
  vatNumber: string
  registrationNumber: string
  bankDetails: string
  termsAndConditions: string
  footerText: string
  primaryColor: string
  secondaryColor: string
  showLogo: boolean
  showSignature: boolean
  showWatermark: boolean
  dateFormat: string
  currencySymbol: string
  invoicePrefix: string
}

const defaultSettings: InvoiceSettings = {
  companyName: "Jewellers CRM",
  companyLogo: "/logo.png",
  companyAddress: "123 Jewellery Lane, London, UK",
  companyPhone: "+44 20 1234 5678",
  companyEmail: "info@jewellerscrm.com",
  companyWebsite: "www.jewellerscrm.com",
  vatNumber: "GB123456789",
  registrationNumber: "12345678",
  bankDetails: "Bank: Example Bank\nAccount: 12345678\nSort Code: 12-34-56",
  termsAndConditions:
    "1. All items remain the property of the seller until paid in full.\n2. Returns accepted within 14 days with original receipt.\n3. Special orders are non-refundable.",
  footerText: "Thank you for your business!",
  primaryColor: "#1e40af",
  secondaryColor: "#6b7280",
  showLogo: true,
  showSignature: true,
  showWatermark: false,
  dateFormat: "DD/MM/YYYY",
  currencySymbol: "Â£",
  invoicePrefix: "INV-",
}

export function SettingsInvoicePage() {
  const [settings, setSettings] = useState<InvoiceSettings>(defaultSettings)
  const [isLoading, setIsLoading] = useState(false)
  const { toast } = useToast()

  // Load settings from localStorage on mount
  useEffect(() => {
    const savedSettings = localStorage.getItem("invoiceSettings")
    if (savedSettings) {
      setSettings(JSON.parse(savedSettings))
    }
  }, [])

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setSettings((prev) => ({ ...prev, [name]: value }))
  }

  const handleSwitchChange = (name: string, checked: boolean) => {
    setSettings((prev) => ({ ...prev, [name]: checked }))
  }

  const handleColorChange = (name: string, color: string) => {
    setSettings((prev) => ({ ...prev, [name]: color }))
  }

  const handleSave = () => {
    setIsLoading(true)

    // Save to localStorage
    localStorage.setItem("invoiceSettings", JSON.stringify(settings))

    // Simulate API call
    setTimeout(() => {
      setIsLoading(false)
      toast({
        title: "Settings saved",
        description: "Your invoice settings have been updated successfully.",
      })
    }, 1000)
  }

  const handleReset = () => {
    setSettings(defaultSettings)
    localStorage.removeItem("invoiceSettings")
    toast({
      title: "Settings reset",
      description: "Your invoice settings have been reset to default values.",
    })
  }

  return (
    <PageLayout
      title="Invoice Settings"
      description="Customize how your invoices look and what information they contain."
    >
      <Tabs defaultValue="company" className="w-full">
        <TabsList className="grid w-full grid-cols-4">
          <TabsTrigger value="company">Company Information</TabsTrigger>
          <TabsTrigger value="appearance">Appearance</TabsTrigger>
          <TabsTrigger value="content">Content</TabsTrigger>
          <TabsTrigger value="preview">Preview</TabsTrigger>
        </TabsList>

        <TabsContent value="company" className="space-y-4 mt-4">
          <Card>
            <CardHeader>
              <CardTitle>Company Details</CardTitle>
              <CardDescription>This information will appear on all invoices generated by the system.</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="companyName">Company Name</Label>
                  <Input id="companyName" name="companyName" value={settings.companyName} onChange={handleChange} />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="companyLogo">Company Logo URL</Label>
                  <Input id="companyLogo" name="companyLogo" value={settings.companyLogo} onChange={handleChange} />
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="companyAddress">Company Address</Label>
                <Textarea
                  id="companyAddress"
                  name="companyAddress"
                  value={settings.companyAddress}
                  onChange={handleChange}
                  rows={3}
                />
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="companyPhone">Phone Number</Label>
                  <Input id="companyPhone" name="companyPhone" value={settings.companyPhone} onChange={handleChange} />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="companyEmail">Email Address</Label>
                  <Input id="companyEmail" name="companyEmail" value={settings.companyEmail} onChange={handleChange} />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="companyWebsite">Website</Label>
                  <Input
                    id="companyWebsite"
                    name="companyWebsite"
                    value={settings.companyWebsite}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="vatNumber">VAT Number</Label>
                  <Input id="vatNumber" name="vatNumber" value={settings.vatNumber} onChange={handleChange} />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="registrationNumber">Company Registration Number</Label>
                  <Input
                    id="registrationNumber"
                    name="registrationNumber"
                    value={settings.registrationNumber}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="bankDetails">Bank Details</Label>
                <Textarea
                  id="bankDetails"
                  name="bankDetails"
                  value={settings.bankDetails}
                  onChange={handleChange}
                  rows={3}
                />
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="appearance" className="space-y-4 mt-4">
          <Card>
            <CardHeader>
              <CardTitle>Invoice Appearance</CardTitle>
              <CardDescription>Customize the look and feel of your invoices.</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label>Primary Color</Label>
                  <div className="flex items-center gap-2">
                    <div className="w-10 h-10 rounded border" style={{ backgroundColor: settings.primaryColor }} />
                    <Input type="text" name="primaryColor" value={settings.primaryColor} onChange={handleChange} />
                  </div>
                </div>
                <div className="space-y-2">
                  <Label>Secondary Color</Label>
                  <div className="flex items-center gap-2">
                    <div className="w-10 h-10 rounded border" style={{ backgroundColor: settings.secondaryColor }} />
                    <Input type="text" name="secondaryColor" value={settings.secondaryColor} onChange={handleChange} />
                  </div>
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="flex items-center space-x-2">
                  <Switch
                    id="showLogo"
                    checked={settings.showLogo}
                    onCheckedChange={(checked) => handleSwitchChange("showLogo", checked)}
                  />
                  <Label htmlFor="showLogo">Show Logo</Label>
                </div>
                <div className="flex items-center space-x-2">
                  <Switch
                    id="showSignature"
                    checked={settings.showSignature}
                    onCheckedChange={(checked) => handleSwitchChange("showSignature", checked)}
                  />
                  <Label htmlFor="showSignature">Show Signature Line</Label>
                </div>
                <div className="flex items-center space-x-2">
                  <Switch
                    id="showWatermark"
                    checked={settings.showWatermark}
                    onCheckedChange={(checked) => handleSwitchChange("showWatermark", checked)}
                  />
                  <Label htmlFor="showWatermark">Show Watermark</Label>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="content" className="space-y-4 mt-4">
          <Card>
            <CardHeader>
              <CardTitle>Invoice Content</CardTitle>
              <CardDescription>Customize the content and formatting of your invoices.</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="dateFormat">Date Format</Label>
                  <Input id="dateFormat" name="dateFormat" value={settings.dateFormat} onChange={handleChange} />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="currencySymbol">Currency Symbol</Label>
                  <Input
                    id="currencySymbol"
                    name="currencySymbol"
                    value={settings.currencySymbol}
                    onChange={handleChange}
                  />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="invoicePrefix">Invoice Number Prefix</Label>
                  <Input
                    id="invoicePrefix"
                    name="invoicePrefix"
                    value={settings.invoicePrefix}
                    onChange={handleChange}
                  />
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="termsAndConditions">Terms and Conditions</Label>
                <Textarea
                  id="termsAndConditions"
                  name="termsAndConditions"
                  value={settings.termsAndConditions}
                  onChange={handleChange}
                  rows={5}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="footerText">Footer Text</Label>
                <Textarea
                  id="footerText"
                  name="footerText"
                  value={settings.footerText}
                  onChange={handleChange}
                  rows={2}
                />
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="preview" className="space-y-4 mt-4">
          <Card>
            <CardHeader>
              <CardTitle>Invoice Preview</CardTitle>
              <CardDescription>Preview how your invoices will look with the current settings.</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="border rounded-lg p-8 bg-white">
                {/* Header */}
                <div
                  className="flex justify-between items-start mb-8"
                  style={{ borderBottom: `2px solid ${settings.primaryColor}`, paddingBottom: "1rem" }}
                >
                  <div>
                    {settings.showLogo && (
                      <div className="mb-2 w-32 h-16 bg-gray-200 flex items-center justify-center rounded">
                        <span className="text-gray-500 text-xs">Company Logo</span>
                      </div>
                    )}
                    <h1 className="text-2xl font-bold" style={{ color: settings.primaryColor }}>
                      {settings.companyName}
                    </h1>
                    <p className="text-sm whitespace-pre-line">{settings.companyAddress}</p>
                    <p className="text-sm">
                      {settings.companyPhone} | {settings.companyEmail}
                    </p>
                    <p className="text-sm">{settings.companyWebsite}</p>
                  </div>
                  <div className="text-right">
                    <h2 className="text-xl font-bold" style={{ color: settings.primaryColor }}>
                      INVOICE
                    </h2>
                    <p className="text-sm">{settings.invoicePrefix}0001</p>
                    <p className="text-sm">Date: {new Date().toLocaleDateString("en-GB")}</p>
                    <p className="text-sm">VAT: {settings.vatNumber}</p>
                    <p className="text-sm">Reg: {settings.registrationNumber}</p>
                  </div>
                </div>

                {/* Customer Info */}
                <div className="mb-8 grid grid-cols-2 gap-4">
                  <div>
                    <h3 className="font-semibold mb-2" style={{ color: settings.primaryColor }}>
                      Bill To:
                    </h3>
                    <p className="text-sm">Customer Name</p>
                    <p className="text-sm">Customer Address Line 1</p>
                    <p className="text-sm">Customer Address Line 2</p>
                    <p className="text-sm">Email: customer@example.com</p>
                    <p className="text-sm">Phone: +44 7123 456789</p>
                  </div>
                  <div>
                    <h3 className="font-semibold mb-2" style={{ color: settings.primaryColor }}>
                      Payment Details:
                    </h3>
                    <p className="text-sm whitespace-pre-line">{settings.bankDetails}</p>
                  </div>
                </div>

                {/* Invoice Items */}
                <div className="mb-8">
                  <table className="w-full text-sm">
                    <thead>
                      <tr style={{ backgroundColor: settings.primaryColor, color: "white" }}>
                        <th className="py-2 px-4 text-left">Item</th>
                        <th className="py-2 px-4 text-left">Description</th>
                        <th className="py-2 px-4 text-left">Serial Number</th>
                        <th className="py-2 px-4 text-right">Price</th>
                        <th className="py-2 px-4 text-right">Qty</th>
                        <th className="py-2 px-4 text-right">Total</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr className="border-b">
                        <td className="py-2 px-4">Rolex Submariner</td>
                        <td className="py-2 px-4">Stainless Steel, Black Dial</td>
                        <td className="py-2 px-4">SN123456789</td>
                        <td className="py-2 px-4 text-right">{settings.currencySymbol}8,500</td>
                        <td className="py-2 px-4 text-right">1</td>
                        <td className="py-2 px-4 text-right">{settings.currencySymbol}8,500</td>
                      </tr>
                      <tr className="border-b">
                        <td className="py-2 px-4">Watch Service</td>
                        <td className="py-2 px-4">Full Service and Polish</td>
                        <td className="py-2 px-4">-</td>
                        <td className="py-2 px-4 text-right">{settings.currencySymbol}450</td>
                        <td className="py-2 px-4 text-right">1</td>
                        <td className="py-2 px-4 text-right">{settings.currencySymbol}450</td>
                      </tr>
                    </tbody>
                    <tfoot>
                      <tr>
                        <td colSpan={4}></td>
                        <td className="py-2 px-4 text-right font-semibold">Subtotal:</td>
                        <td className="py-2 px-4 text-right">{settings.currencySymbol}8,950</td>
                      </tr>
                      <tr>
                        <td colSpan={4}></td>
                        <td className="py-2 px-4 text-right font-semibold">VAT (20%):</td>
                        <td className="py-2 px-4 text-right">{settings.currencySymbol}1,790</td>
                      </tr>
                      <tr style={{ color: settings.primaryColor }}>
                        <td colSpan={4}></td>
                        <td className="py-2 px-4 text-right font-bold">Total:</td>
                        <td className="py-2 px-4 text-right font-bold">{settings.currencySymbol}10,740</td>
                      </tr>
                    </tfoot>
                  </table>
                </div>

                {/* Terms and Signature */}
                <div className="mb-8">
                  <h3 className="font-semibold mb-2" style={{ color: settings.primaryColor }}>
                    Terms and Conditions:
                  </h3>
                  <p className="text-sm whitespace-pre-line">{settings.termsAndConditions}</p>
                </div>

                {settings.showSignature && (
                  <div className="mb-8 grid grid-cols-2 gap-4">
                    <div>
                      <p className="text-sm mb-8">Customer Signature:</p>
                      <div className="border-t border-gray-400 pt-1">
                        <p className="text-sm">Date: ___________________</p>
                      </div>
                    </div>
                    <div>
                      <p className="text-sm mb-8">Authorized Signature:</p>
                      <div className="border-t border-gray-400 pt-1">
                        <p className="text-sm">Date: ___________________</p>
                      </div>
                    </div>
                  </div>
                )}

                {/* Footer */}
                <div className="text-center mt-8 pt-4" style={{ borderTop: `1px solid ${settings.secondaryColor}` }}>
                  <p className="text-sm text-gray-600">{settings.footerText}</p>
                  {settings.showWatermark && <p className="text-xs text-gray-400 mt-2">Generated by Jewellers CRM</p>}
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>

      <div className="flex justify-between mt-6">
        <Button variant="outline" onClick={handleReset}>
          Reset to Defaults
        </Button>
        <Button onClick={handleSave} disabled={isLoading}>
          {isLoading ? "Saving..." : "Save Settings"}
        </Button>
      </div>
    </PageLayout>
  )
}

